import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link';
import { useRouter } from 'next/router'
import styles from '@/src/styles/Home.module.css'
import logo from '../../public/images/logo_red.png'
import { getAuth, createUserWithEmailAndPassword, updateProfile } from "firebase/auth";
import { Layout, Row, Col, Spin, notification, Card, message, Form, Button, Input } from 'antd';
import React, { useEffect, useState } from 'react'
import app from '../firebase/config'
import { addData } from '../firebase/firestore/addData';

const { Header, Content } = Layout;

export default function Register() {
  const router = useRouter()
  const [loading, setsLoading] = useState(false);
  const [messageApi, contextHolder] = message.useMessage();

  const handleRegister = (values) => {
    setsLoading(true)
    const auth = getAuth(app);
    const request = createUserWithEmailAndPassword(auth, values.username, values.password)
    .then((userCredential) => {
      updateProfile(auth.currentUser, {displayName:values.displayName}).then(()=>{
        const user = userCredential.user;
        console.log(user)
        addData('users',user.uid, {"displayName":values.displayName, "email":values.username})
        router.push('/home')
      })
    })
    .catch((error) => {
      const errorCode = error.code;
      const errorMessage = error.message;
      messageApi.open({content:errorMessage, type:'error', duration:3});
      console.log(errorCode)
      setsLoading(false)
    });
  } 

  return <>
  {contextHolder}
    <Head>
      <title>Register</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Layout>
      <Header className={styles.headerStyle} style={{backgroundColor:'white'}}>
        <Image alt='logo' height={50} src={logo} />
        <div>
          <div></div>
          <div></div>
        </div>
      </Header>
      <div className={styles.bar}></div>
      
      <Content style={{backgroundColor:'white'}}>
        <Spin spinning={loading}>
          <Form className={styles.registerForm} name='registerForm' layout='vertical' onFinish={handleRegister} style={{minWidth:'250px', maxWidth:'1000px', textAlign:'left'}}>
            <h2>Create an Account</h2>
            <Form.Item name='displayName' id='name' label='Name' requiredMark='optional'
              rules={[
                {max:7}
              ]}
            ><Input /></Form.Item>
            <Form.Item name='username' id='username' label='Email' required={true} 
              rules={[
                {required:true, message:'Please enter an email'},
                {type:'email', message: 'Please enter a valid email',}
              ]}
            ><Input /></Form.Item>
            <Form.Item name='password' id='password' label='Password' required={true} 
              rules={[
                {required:true, message:'Please create a password'},
                {min:6, message:'too short'}
              ]}
            ><Input.Password /></Form.Item>
            <Form.Item name='confpassword' id='confpassword' label='Confirm Password' required={true}
              dependencies={['password']}
              rules={[
                {required:true, message:'Please confirm your password'}, 
                ({getFieldValue})=>({
                  validator(_, value) {
                    if(!value || getFieldValue('password') === value){
                      return Promise.resolve()
                    }
                    return Promise.reject(new Error("Passwords don't match"))
                  }
                })
              ]}
              validateTrigger='onBlur'
            ><Input.Password /></Form.Item>
            <Form.Item><Button type='primary' htmlType="submit" style={{backgroundColor:'rgb(230,26,57)'}}>Register</Button></Form.Item>
            <p>Already have an account? <a href='../login'>Login now!</a> </p>
          </Form>
        </Spin>
      </Content>
    </Layout>
  </>
}

