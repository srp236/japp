import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import styles from '@/src/styles/Home.module.css'
import logo from '../../public/images/logo_red.png'
import React, { useState } from 'react'
import firebase_app from "../firebase/config";
import { getFirestore, getDoc, doc } from "firebase/firestore";
import { Layout, Row, Col, Spin, notification } from 'antd';

const { Header, Footer, Content } = Layout;

async function getSong(songName, artistName) {
  const db = getFirestore(firebase_app)
  let docRef = doc(db, 'lyrics', artistName);
  try {
    const response = await getDoc(docRef);
    const result = response.data()[songName]
    return result;
  } catch (error) {
    console.log('artist not in database')
    return undefined
  }
}

async function getLyricRef(songName, artistName) {
  const data = {
    songName: songName,
    artistName: artistName,
  }
  const JSONdata = JSON.stringify(data)
    const endpoint = '/api/get_ref'
    const options = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSONdata,
    }
    
    const response = await fetch(endpoint, options)
    const result = await response.json()

    if(result.data != 1){
      console.log(result.data)
      return result.data
    } else {
      return 1
    }
}

export default function Home() {
  const [api, contextHolder] = notification.useNotification();
  const [loading, setLoading] = useState(false);
  const router = useRouter()

  const openNotificationWithIcon = (type) => {
    api[type]({
      message: 'Error',
      description:
        'Song not avaialbe. Please try another request',
    });
  };

  const handleSubmit = async (event) => {
    setLoading(true)
    event.preventDefault()

    let x = document.forms["songForm"]["songName"].value;
    let y = document.forms["songForm"]["artistName"].value;
    if (x == "" || y == "") {
      alert("Please complete all fileds");
      setLoading(false)
      return false;
    } 
    const data = {
      songName: event.target.songName.value,
      artistName: event.target.artistName.value,
    }

    const temp = await getSong(data.songName, data.artistName)
    let temp2;

    if(temp !== undefined){
      router.push({pathname:`/songs/${data.songName}`, query: {title:data.songName, artist:data.artistName, fstat:0}})
    } else if ((temp2 = await getLyricRef(data.songName, data.artistName)) !== 1) {
      router.push({pathname:`/songs/${data.songName}`, query: {title:data.songName, artist:data.artistName, fstat:temp2}})
    } else {
      setLoading(false)
      openNotificationWithIcon('error')      
    }
  }
  return <>
  {contextHolder}
    <Head>
      <title>だんだん</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Layout>
      <Header className={styles.headerStyle} style={{backgroundColor:'white'}}>
        <Image alt='logo' height={50} src={logo} />
        <div>
          <div></div>
          <div></div>
        </div>
      </Header>
      <div className={styles.bar}></div>
      <Content>
        <Spin spinning={loading}>
          <h1>Search a Song</h1>
          <form className={styles.songForm} name='songForm' onSubmit={handleSubmit}>
            <label>Song Name</label>
            <input type='text' id='songName' name='songName'/>
            <label>Artist Name</label>
            <input type='text' id='artistName' name='artistName'/>
            <button type='submit'>Submit</button>  
          </form>
          <div id='message'></div>
          <div className={styles.space}></div>
        </Spin>
      </Content>
      <Footer className={styles.footerStyle}>
        <Row>
          {/* <Col span={8}>temp</Col> */}
          {/* <Col span={8}>temp</Col> */}
          <Col span={8} offset={8} >temp</Col>
          <Col span={8}>
            <h3>Connect with Me</h3>
            <ul>
              <li>Github</li>
              <li>LinkedIN</li>
            </ul>
          </Col>
        </Row>
        <Image alt='' height={60} className={styles.footerImg} src={logo}/>
      </Footer>
    </Layout>
  </>
}
